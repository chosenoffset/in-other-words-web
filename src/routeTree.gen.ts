/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInSsoCallbackRouteImport } from './routes/sign-in-sso-callback'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as CheckoutSuccessRouteImport } from './routes/checkout-success'
import { Route as CheckoutCancelRouteImport } from './routes/checkout-cancel'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCmsRouteImport } from './routes/_auth.cms'
import { Route as AuthCmsIndexRouteImport } from './routes/_auth.cms.index'
import { Route as AuthCmsUsersRouteImport } from './routes/_auth.cms.users'
import { Route as AuthCmsPuzzlesRouteImport } from './routes/_auth.cms.puzzles'
import { Route as AuthCmsPuzzlesPuzzleIdRouteImport } from './routes/_auth.cms.puzzles_.$puzzleId'

const SignInSsoCallbackRoute = SignInSsoCallbackRouteImport.update({
  id: '/sign-in-sso-callback',
  path: '/sign-in-sso-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutSuccessRoute = CheckoutSuccessRouteImport.update({
  id: '/checkout-success',
  path: '/checkout-success',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutCancelRoute = CheckoutCancelRouteImport.update({
  id: '/checkout-cancel',
  path: '/checkout-cancel',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCmsRoute = AuthCmsRouteImport.update({
  id: '/cms',
  path: '/cms',
  getParentRoute: () => AuthRoute,
} as any)
const AuthCmsIndexRoute = AuthCmsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthCmsRoute,
} as any)
const AuthCmsUsersRoute = AuthCmsUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthCmsRoute,
} as any)
const AuthCmsPuzzlesRoute = AuthCmsPuzzlesRouteImport.update({
  id: '/puzzles',
  path: '/puzzles',
  getParentRoute: () => AuthCmsRoute,
} as any)
const AuthCmsPuzzlesPuzzleIdRoute = AuthCmsPuzzlesPuzzleIdRouteImport.update({
  id: '/puzzles_/$puzzleId',
  path: '/puzzles/$puzzleId',
  getParentRoute: () => AuthCmsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkout-cancel': typeof CheckoutCancelRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/cms': typeof AuthCmsRouteWithChildren
  '/cms/puzzles': typeof AuthCmsPuzzlesRoute
  '/cms/users': typeof AuthCmsUsersRoute
  '/cms/': typeof AuthCmsIndexRoute
  '/cms/puzzles/$puzzleId': typeof AuthCmsPuzzlesPuzzleIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkout-cancel': typeof CheckoutCancelRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/cms/puzzles': typeof AuthCmsPuzzlesRoute
  '/cms/users': typeof AuthCmsUsersRoute
  '/cms': typeof AuthCmsIndexRoute
  '/cms/puzzles/$puzzleId': typeof AuthCmsPuzzlesPuzzleIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/checkout-cancel': typeof CheckoutCancelRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/profile': typeof ProfileRoute
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/_auth/cms': typeof AuthCmsRouteWithChildren
  '/_auth/cms/puzzles': typeof AuthCmsPuzzlesRoute
  '/_auth/cms/users': typeof AuthCmsUsersRoute
  '/_auth/cms/': typeof AuthCmsIndexRoute
  '/_auth/cms/puzzles_/$puzzleId': typeof AuthCmsPuzzlesPuzzleIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/checkout-cancel'
    | '/checkout-success'
    | '/profile'
    | '/sign-in'
    | '/sign-in-sso-callback'
    | '/cms'
    | '/cms/puzzles'
    | '/cms/users'
    | '/cms/'
    | '/cms/puzzles/$puzzleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/checkout-cancel'
    | '/checkout-success'
    | '/profile'
    | '/sign-in'
    | '/sign-in-sso-callback'
    | '/cms/puzzles'
    | '/cms/users'
    | '/cms'
    | '/cms/puzzles/$puzzleId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/checkout-cancel'
    | '/checkout-success'
    | '/profile'
    | '/sign-in'
    | '/sign-in-sso-callback'
    | '/_auth/cms'
    | '/_auth/cms/puzzles'
    | '/_auth/cms/users'
    | '/_auth/cms/'
    | '/_auth/cms/puzzles_/$puzzleId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CheckoutCancelRoute: typeof CheckoutCancelRoute
  CheckoutSuccessRoute: typeof CheckoutSuccessRoute
  ProfileRoute: typeof ProfileRoute
  SignInRoute: typeof SignInRoute
  SignInSsoCallbackRoute: typeof SignInSsoCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in-sso-callback': {
      id: '/sign-in-sso-callback'
      path: '/sign-in-sso-callback'
      fullPath: '/sign-in-sso-callback'
      preLoaderRoute: typeof SignInSsoCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout-success': {
      id: '/checkout-success'
      path: '/checkout-success'
      fullPath: '/checkout-success'
      preLoaderRoute: typeof CheckoutSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout-cancel': {
      id: '/checkout-cancel'
      path: '/checkout-cancel'
      fullPath: '/checkout-cancel'
      preLoaderRoute: typeof CheckoutCancelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/cms': {
      id: '/_auth/cms'
      path: '/cms'
      fullPath: '/cms'
      preLoaderRoute: typeof AuthCmsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/cms/': {
      id: '/_auth/cms/'
      path: '/'
      fullPath: '/cms/'
      preLoaderRoute: typeof AuthCmsIndexRouteImport
      parentRoute: typeof AuthCmsRoute
    }
    '/_auth/cms/users': {
      id: '/_auth/cms/users'
      path: '/users'
      fullPath: '/cms/users'
      preLoaderRoute: typeof AuthCmsUsersRouteImport
      parentRoute: typeof AuthCmsRoute
    }
    '/_auth/cms/puzzles': {
      id: '/_auth/cms/puzzles'
      path: '/puzzles'
      fullPath: '/cms/puzzles'
      preLoaderRoute: typeof AuthCmsPuzzlesRouteImport
      parentRoute: typeof AuthCmsRoute
    }
    '/_auth/cms/puzzles_/$puzzleId': {
      id: '/_auth/cms/puzzles_/$puzzleId'
      path: '/puzzles/$puzzleId'
      fullPath: '/cms/puzzles/$puzzleId'
      preLoaderRoute: typeof AuthCmsPuzzlesPuzzleIdRouteImport
      parentRoute: typeof AuthCmsRoute
    }
  }
}

interface AuthCmsRouteChildren {
  AuthCmsPuzzlesRoute: typeof AuthCmsPuzzlesRoute
  AuthCmsUsersRoute: typeof AuthCmsUsersRoute
  AuthCmsIndexRoute: typeof AuthCmsIndexRoute
  AuthCmsPuzzlesPuzzleIdRoute: typeof AuthCmsPuzzlesPuzzleIdRoute
}

const AuthCmsRouteChildren: AuthCmsRouteChildren = {
  AuthCmsPuzzlesRoute: AuthCmsPuzzlesRoute,
  AuthCmsUsersRoute: AuthCmsUsersRoute,
  AuthCmsIndexRoute: AuthCmsIndexRoute,
  AuthCmsPuzzlesPuzzleIdRoute: AuthCmsPuzzlesPuzzleIdRoute,
}

const AuthCmsRouteWithChildren =
  AuthCmsRoute._addFileChildren(AuthCmsRouteChildren)

interface AuthRouteChildren {
  AuthCmsRoute: typeof AuthCmsRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCmsRoute: AuthCmsRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CheckoutCancelRoute: CheckoutCancelRoute,
  CheckoutSuccessRoute: CheckoutSuccessRoute,
  ProfileRoute: ProfileRoute,
  SignInRoute: SignInRoute,
  SignInSsoCallbackRoute: SignInSsoCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
