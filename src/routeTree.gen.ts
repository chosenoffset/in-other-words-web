/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInSsoCallbackRouteImport } from './routes/sign-in-sso-callback'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCmsRouteImport } from './routes/_auth.cms'

const SignInSsoCallbackRoute = SignInSsoCallbackRouteImport.update({
  id: '/sign-in-sso-callback',
  path: '/sign-in-sso-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCmsRoute = AuthCmsRouteImport.update({
  id: '/cms',
  path: '/cms',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/cms': typeof AuthCmsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/cms': typeof AuthCmsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-in-sso-callback': typeof SignInSsoCallbackRoute
  '/_auth/cms': typeof AuthCmsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/sign-in-sso-callback' | '/cms'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/sign-in-sso-callback' | '/cms'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/sign-in'
    | '/sign-in-sso-callback'
    | '/_auth/cms'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignInSsoCallbackRoute: typeof SignInSsoCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in-sso-callback': {
      id: '/sign-in-sso-callback'
      path: '/sign-in-sso-callback'
      fullPath: '/sign-in-sso-callback'
      preLoaderRoute: typeof SignInSsoCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/cms': {
      id: '/_auth/cms'
      path: '/cms'
      fullPath: '/cms'
      preLoaderRoute: typeof AuthCmsRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthCmsRoute: typeof AuthCmsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCmsRoute: AuthCmsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  SignInRoute: SignInRoute,
  SignInSsoCallbackRoute: SignInSsoCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
